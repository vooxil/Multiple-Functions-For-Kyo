local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vooxil/HOT-TDS-AMOGUS-ROOT-GUI/main/Custom%20GUI", true))()
local ESEX = library:CreateWindow("Functions for Kyo")

-- MAIN FUNCTIONS

ESEX:Section("MAIN FUNCTIONS:")

-- UNDERGROUND STACK GUI 

ESEX:Button("Underground Stack GUI", function()
local event = game:GetService("ReplicatedStorage").RemoteFunction
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vooxil/HOT-TDS-AMOGUS-ROOT-GUI/main/Custom%20GUI", true))()
local AMBASSING = library:CreateWindow("Underground Stack")
local h = -1
local times = 1
local Mouse = game.Players.LocalPlayer:GetMouse()
AMBASSING:Section("Stacking")
local Toggle = AMBASSING:Toggle('Stacking Enabled', {flag = "toggle1"})
AMBASSING:Slider("Amount",
    {
        precise = false,
        default = 1,
        min = 1,
        max = 15,
    },
function(v)
    times = v
end)

AMBASSING:Slider("Height",
    {
        precise = false,
        default = -0.5,
        min = -11,
        max = 5,
    },
function(v)
    h = v
end)

AMBASSING:Button("Remove GUI", function()
 for i,v in pairs(game:GetService("CoreGui"):GetDescendants()) do
        if v:IsA("Frame") and v.Name == "Underground Stack" then
            v.Parent.Parent:Destroy()
        end
    end
end)
local OldNamecall

OldNamecall = hookmetamethod(game, "__namecall", function(Self, ...)
    local Args = {...}
    local NamecallMethod = getnamecallmethod()
    if AMBASSING.flags.toggle1 and #Args == 4 and NamecallMethod == "InvokeServer" and Self == event and Args[1] == "Troops" and Args[2] == "Place" then
        spawn(function()
            for i = 1, times do
                event:InvokeServer(Args[1], Args[2], Args[3], {Rotation = CFrame.new(0,h,0),Position = Args[4]['Position']}, true)
                wait(.2)
            end
        end)
        return nil
    end
    return OldNamecall(Self, ...)
end)
AMBASSING:Section("Modified & Designed: xill#0001")
end)

-- SELL FARMS FINAL WAVE

ESEX:Button("Sell Farms Final Wave", function()
if not game:IsLoaded() then game.Loaded:Wait() end
if game.PlaceId ~= 5591597781 then return end
local rf, id, StateReplicatorPath = game.ReplicatedStorage.RemoteFunction, game.Players.LocalPlayer.UserId
for i,v in pairs(game.ReplicatedStorage.StateReplicators:GetChildren()) do
	if v:GetAttribute("Wave") then
		StateReplicatorPath = v
		break
	end
end
StateReplicatorPath:GetAttributeChangedSignal("Wave"):Wait()
local FinalWaveAtDifferentMode = {["Easy"] = 30, ["Normal"] = 40, ["Insane"] = 40, ["Hardcore"] = 50}
local FinalWave = FinalWaveAtDifferentMode[game.ReplicatedStorage.State.Difficulty.Value]
StateReplicatorPath:GetAttributeChangedSignal("Wave"):Connect(function()
	if StateReplicatorPath:GetAttribute("Wave") == FinalWave then
		for i,v in ipairs(workspace.Towers:GetChildren()) do
			if v.Owner.Value == id and v.Replicator:GetAttribute("Type") == "Farm" then
				spawn(function()
					rf:InvokeServer("Troops","Sell",{["Troop"] = v})
				end)
			end
		end
	end
end)
end)

-- ANIME SKY

ESEX:Button("Anime Sky", function()
getgenv().ParanormalLighting = true

game:GetService("RunService").Heartbeat:Connect(
function()
    if getgenv().ParanormalLighting then
Sky = game.Lighting.Sky

Sky.SkyboxBk = "http://www.roblox.com/asset/?id=4949649813"
Sky.SkyboxDn = "http://www.roblox.com/asset/?id=4949649813"
Sky.SkyboxFt = "http://www.roblox.com/asset/?id=4949649813"
Sky.SkyboxLf = "http://www.roblox.com/asset/?id=4949649813"
Sky.SkyboxRt = "http://www.roblox.com/asset/?id=4949649813"
Sky.SkyboxUp = "http://www.roblox.com/asset/?id=4949649813"

Time = game.Lighting

Time.TimeOfDay = "11:30:12"

Fog = game.Lighting.FogEnd

Fog = 10000

Shadows = game.Lighting.GlobalShadows

Shadows = false
end
end)
end)

-- DJ MUSIC GUI

ESEX:Button("DJ Music GUI", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/vooxil/HOT-TDS-AMOGUS-ESEX-ROOT-GUI/main/DJ%20MUSIC%20GUI",true))()
	end)

-- LOBBY FUNCTIONS

ESEX:Section("LOBBY FUNCTIONS:")

-- SHOW TOWER HOTKEYS MENU

ESEX:Button("Show Tower Hotkeys", function()
repeat task.wait() until game:IsLoaded()
if game.PlaceId == 3260590327 then
local interf = game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Interface", 60)
interf.Root:WaitForChild("Frame", 60)
local function findCurr()
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Interface.Root:GetChildren()) do
        if v:FindFirstChild("Currency") then
           return v
        end
    end
end
local newParent = findCurr()
local hotBar = game:GetService("Players").LocalPlayer.PlayerGui.Interface.Root.Frame.Hotbar
local towerHotbar = hotBar:Clone()
newParent.Position = newParent.Position + UDim2.new(0,30,0,20)
local setPos = newParent.Position
spawn(function()
    while task.wait() do
        newParent.Position = setPos
    end
end)
towerHotbar.Parent = newParent
towerHotbar.LayoutOrder = 1
local c=0
for i,v in pairs(towerHotbar.Buttons:GetChildren()) do
    if v:IsA("Frame") then
        if c<5 then
            c=c+1
            v.Name = tostring(c)
            v.Button.Hint.Content.TextLabel.Text = "Unequip this tower"
            v.Button.Content.Notification.Visible = false
            v.Button.Content.Notification.Text = "G"
            v.Button.Content.Icon.Size = UDim2.new(0,80,0,80)
            v.Button.Content.Notification.BackgroundColor3 = Color3.fromRGB(255, 150, 0)
            v.Button.Content.TextLabel.TextColor3 = Color3.fromRGB(0,255,0)
        else
            v:Remove()
        end
    end
end

local Connections = {}
local troopAssets = game:GetService("ReplicatedStorage").Assets.Troops
function UpdateHotBar()
local EquippedTowers = {}
local GoldenTowers = {}
for i, v in next, game.ReplicatedStorage.RemoteFunction:InvokeServer("Session", "Search", "Inventory.Troops") do
	if (v.Equipped) then
		table.insert(EquippedTowers, i)
		if (v.GoldenPerks) then
		    table.insert(GoldenTowers, i)
        end
    end
end
for i,v in pairs(Connections) do
   v:Disconnect()
end
for i=1,5 do
    towerHotbar.Buttons:WaitForChild(tostring(i), 60).Button.Content.Notification.Visible = false
end
for i=1,5 do
    local localButton = towerHotbar.Buttons:WaitForChild(tostring(i), 60)
    if EquippedTowers[i] then
        local stats
        if table.find(GoldenTowers, EquippedTowers[i]) then
            stats = require(troopAssets[EquippedTowers[i]].Stats_Golden)
            localButton.Button.Content.Notification.Visible = true
        else
            stats = require(troopAssets[EquippedTowers[i]].Stats)
            localButton.Button.Content.Notification.Visible = false
        end
        localButton.Button.Content.Icon.Image = 'rbxassetid://'..tostring(stats.Icon)
        localButton.Button.Content.TextLabel.Text = '$'..tostring(stats.Price)
        local connectionButton = localButton.Button.MouseButton1Click:Connect(function()
            game:GetService("ReplicatedStorage").RemoteFunction:InvokeServer("Inventory","Unequip","Tower",EquippedTowers[i])
            localButton.Button.Content.Notification.Visible = false
            UpdateHotBar()
        end)
        table.insert(Connections, connectionButton)
    else
        localButton.Button.Content.Icon.Image = ''
        localButton.Button.Content.TextLabel.Text = ''
    end
end
end
while true do
    UpdateHotBar()
    task.wait(0.1)
end
end
end)

-- FORCE MAP CHANGE

ESEX:Button("Force Map Change", function()
local L = game.ReplicatedStorage.RemoteFunction
for a, c in pairs(game:GetService('Workspace').Elevators:GetChildren()) do
    local a = require(c.Settings).Type
    local b = c.State.Players
    if a == "Survival" and b.Value <= 0 then
        L:InvokeServer("Elevators", "Enter", c)
        wait(1)
        L:InvokeServer("Elevators", "Leave")
        end
    end
    wait(0.6)
L:InvokeServer("Elevators", "Leave")
    wait(1)
end)

-- DANGER AMOGOS

ESEX:Section("DANGER ZONE:")

-- REMOVE GUI

ESEX:Button("Remove GUI", function()
 for i,v in pairs(game:GetService("CoreGui"):GetDescendants()) do
        if v:IsA("Frame") and v.Name == "Functions for Kyo" then
            v.Parent.Parent:Destroy()
        end
    end
end)

-- CREDITS

ESEX:Section("Modified & Designed: xill#0001")


